[{"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/index.js":"1","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/App.js":"2","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/FormSendPost.jsx":"3","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Navbar.jsx":"4","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/ListPost.jsx":"5","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Login.jsx":"6","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Logout.jsx":"7","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/Post.jsx":"8"},{"size":295,"mtime":1622396686504,"results":"9","hashOfConfig":"10"},{"size":1854,"mtime":1622646117573,"results":"11","hashOfConfig":"10"},{"size":2123,"mtime":1622637061327,"results":"12","hashOfConfig":"10"},{"size":1007,"mtime":1622389863171,"results":"13","hashOfConfig":"10"},{"size":568,"mtime":1622620232381,"results":"14","hashOfConfig":"10"},{"size":445,"mtime":1622569497940,"results":"15","hashOfConfig":"10"},{"size":316,"mtime":1622389720802,"results":"16","hashOfConfig":"10"},{"size":977,"mtime":1622634489504,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2zpzdd",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/index.js",[],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/App.js",["37","38"],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/FormSendPost.jsx",["39"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst FormSendPost = ({onSubmit, handleAdd }) => {\n\n    const initPost = {\n        \n        title: '',\n        textPost: ''\n    };\n\n    const [post, setPostState] = useState(initPost);\n\n    const handleChange = (e) => {\n        setPostState({\n            ...post,\n            [e.target.name]:\n                e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(post);\n    };\n\n    return (\n        <div className=\" col-6 sinPading\">\n            <div className=\"card\">\n                <div className=\"card-header colorAutor\"> Autor: </div>\n                <div className=\"card-body\">\n                    <form onSubmit={handleSubmit}>\n                        <label className=\"form-label\" id=\"title\">Título: </label>\n\n                        <input \n                                id=\"title\" \n                                type=\"text\" \n                                className=\"form-control\"\n                                name=\"title\"\n                                value={post.title}\n                                onChange={handleChange} \n                        />\n\n                        <label className=\"form-label\" id=\"textPost\">Mensaje: </label>\n\n                        <input  id=\"textPost\" \n                                type=\"textarea\" \n                                className=\"form-control\" \n                                rows=\"3\" \n                                placeholder=\"Tu texto...\" \n                                name=\"textPost\"\n                                value={post.textPost}\n                                onChange={handleChange} \n                        />\n\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick = {() => handleAdd()}>Nuevo post</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFormSendPost.propTypes = {\n    input: PropTypes.string.isRequired\n};\n\nexport default FormSendPost;",["40","41"],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Navbar.jsx",["42","43","44","45"],"import React from 'react';\n\nimport logoIndex from './../../assets/logo.png';\nimport Login from './Login';\nimport Logout from './Logout';\n\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-expand-md navbar-expand-sm navbar-dark  bg-dark\">\n        <div className=\"container-fluid\">\n          <img src={logoIndex} className=\"logoIndex\" />\n\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\">Inicio</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">Acerca de</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">Contacto</a>\n              </li>\n            </ul>\n            <Login />\n            <Logout />\n          </div>\n        </div>\n      </nav>\n      <div/>\n    </div>\n  );\n};\n\nexport default Navbar;","/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/ListPost.jsx",[],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Login.jsx",[],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Navbar/Logout.jsx",[],"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/Post.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":18,"column":10,"nodeType":"48","messageId":"49","endLine":18,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":51,"column":5,"nodeType":"52","endLine":51,"endColumn":7,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":13,"column":11,"nodeType":"61","endLine":13,"endColumn":56},{"ruleId":"62","severity":1,"message":"63","line":18,"column":17,"nodeType":"61","endLine":18,"endColumn":48},{"ruleId":"62","severity":1,"message":"63","line":21,"column":17,"nodeType":"61","endLine":21,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":24,"column":17,"nodeType":"61","endLine":24,"endColumn":41},"no-unused-vars","'FormPost' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'useEffect' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"67","fix":"68"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [posts]",{"range":"69","text":"70"},[1446,1448],"[posts]"]