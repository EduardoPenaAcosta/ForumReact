{"ast":null,"code":"var _jsxFileName = \"/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Pra\\u0301cticas/Tema 8/Pra\\u0301ctica 2/src/components/Posts/FormSendPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialsPost = [{\n  id: uuidv4(),\n  authorPost: 'Alexis',\n  textPost: '-0,25 Por no poner bien el padding.'\n}, {\n  id: uuidv4(),\n  authorPost: 'Jose Carlos',\n  textPost: 'La próxima te quito 1.5 por no poner en rojo el color.'\n}];\n\nconst FormSendPost = ({\n  authorPost,\n  textPost\n}) => {\n  _s();\n\n  const doGetCategories = () => {\n    const result = JSON.parse(localStorage.getItem('categories'));\n    return result ? result : initialsCategories;\n  };\n\n  const [categories, setCategories] = useState(doGetCategories());\n\n  const handleAdd = () => {\n    setCategories([...categories, {\n      id: uuidv4(),\n      name: 'Tarjetas de memoria'\n    }]);\n    localStorage.setItem('categories', JSON.stringify(categories));\n  };\n\n  const handleDelete = id => {\n    setCategories(categories.filter(category => category.id !== id));\n  }; // [] -> Si pongo un Array vacío se ejecutará una única vez, al cargar el componente.\n  // Nada -> Se ejecutará en cada renderizado del componente.\n  // [estado] -> Se ejecutará en cada cambio que sufra el estado.\n\n\n  useEffect(() => {\n    localStorage.setItem('categories', JSON.stringify(categories));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" col-6 sinPading\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header colorAutor\",\n        children: \" Autor: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          id: \"title\",\n          children: \"T\\xEDtulo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          id: \"message\",\n          children: \"Mensaje: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"message\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Tu texto...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Nuevo post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\n_s(FormSendPost, \"bl3RSmmB6dWbUluMORGSw1FwKYU=\");\n\n_c = FormSendPost;\nFormSendPost.propTypes = {\n  input: PropTypes.string.isRequired\n};\nexport default FormSendPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSendPost\");","map":{"version":3,"sources":["/Users/eduardo/Desktop/Documentos de Clase/Lenguaje de Marcas/Prácticas/Tema 8/Práctica 2/src/components/Posts/FormSendPost.jsx"],"names":["React","useState","useEffect","PropTypes","initialsPost","id","uuidv4","authorPost","textPost","FormSendPost","doGetCategories","result","JSON","parse","localStorage","getItem","initialsCategories","categories","setCategories","handleAdd","name","setItem","stringify","handleDelete","filter","category","propTypes","input","string","isRequired"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialsPost = [\n    { id: uuidv4(), authorPost: 'Alexis', textPost: '-0,25 Por no poner bien el padding.' },\n    { id: uuidv4(), authorPost: 'Jose Carlos', textPost: 'La próxima te quito 1.5 por no poner en rojo el color.' }\n  ];\n\n\n\nconst FormSendPost = ({authorPost, textPost}) => {\n\n    const doGetCategories = () => {\n        const result = JSON.parse(localStorage.getItem('categories'));\n        return result ? result : initialsCategories;\n    };\n  \n    const [categories, setCategories] = useState(doGetCategories());\n  \n  \n    const handleAdd = () => {\n      setCategories([\n        ...categories,\n        { id: uuidv4(), name: 'Tarjetas de memoria' }\n      ]);\n      localStorage.setItem('categories', JSON.stringify(categories));\n    };\n  \n    const handleDelete = (id) => {\n          setCategories(categories.filter((category) => category.id !== id));\n        };\n  \n    // [] -> Si pongo un Array vacío se ejecutará una única vez, al cargar el componente.\n    // Nada -> Se ejecutará en cada renderizado del componente.\n    // [estado] -> Se ejecutará en cada cambio que sufra el estado.\n    useEffect(() => {\n      localStorage.setItem('categories', JSON.stringify(categories));\n    }, []); \n  \n\n    return (\n            <div className=\" col-6 sinPading\">\n                <div className=\"card\">\n                    <div className=\"card-header colorAutor\"> Autor: </div>\n                    <div className=\"card-body\">\n                    <label className=\"form-label\" id=\"title\">Título: </label>\n                    <input id=\"title\" type=\"text\" className=\"form-control\"/>\n                    <label className=\"form-label\" id=\"message\">Mensaje: </label>\n                    <input id=\"message\" type=\"text\" className=\"form-control\" placeholder=\"Tu texto...\"/>\n                    <button type=\"submit\" className=\"btn btn-primary\">Nuevo post</button>\n                    </div>\n                </div>\n            </div>\n    );\n};\n\nFormSendPost.propTypes = {\n    input: PropTypes.string.isRequired\n};\n\nexport default FormSendPost;"]},"metadata":{},"sourceType":"module"}